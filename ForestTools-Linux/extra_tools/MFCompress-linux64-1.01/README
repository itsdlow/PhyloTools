=== This package contains the following files:

README
	This file.

MFCompressC
	The encoder binary for 64-bit linux.

MFCompressD
	The decoder binary for 64-bit linux.

example.fa
	Example of a multi-fasta file (this is file CAM_PROJ_MarineBrine.read.fa
	from the CAMERA data set).

=== The MFCompressC program has the following interface:

MFCompressC [ -o EncodedFile ]
            [ -v (verbose) ]
            [ -V (version) ]
            [ -1 (fast mode, less mem) ]
            [ -2 (default mode) ]
            [ -3 (best mode, more mem) ]
            [ -p nParts ]
            [ -t maxProcs (def 2) ]
            MultiFastaFile

-o EncodedFile
    If present, it writes the encoded data into file "EncodedFile". If not
    present, the output file name is the same as the input file name with
    ".mfc" appended.

-v
	Verbose. Some additional information is displayed.

-V
	Show version information.

-1
	One of the three possible modes of operation. In this mode, the program
	is usually faster, uses less memory, but the compression rate is also
	sligtly worse.

-2
	One of the three possible modes of operation. In this mode, the program
	uses more memory and time compared to mode "-1", but the compression
	rate is generally better. This is the default mode.

-3
	One of the three possible modes of operation. This is the most demanding
	mode, both in terms of time and memory required. However, it usually
	produces the highest compression.

-p nParts
	The number of parts in which the file is divided. Each part is then
	encoded independently from the other parts. The larger this number,
	the higher the possibility of parallelization (see also the -t flag).
	However, if these parts happen to be too small, the compression rate
	may decrease. If this flag is not present, the encoder will create
	the maximum possible number of parts such that all of then are at
	least 250MB long.

-t maxProcs
	Maximum number of parallel processes during encoding. Note: currently,
	parallel processing is not implemented in the Windows version.
	Therefore, for better performance, we recommend to use Linux.

MultiFastaFile
	The fasta or multi-fasta to encode.

=== The MFCompressD program has the following interface:

MFCompressD [ -o MultiFastaFile ]
            [ -v (verbose) ]
            [ -V (version) ]
            [ -t maxProcs (def 2) ]
            [ -r recordRange (i:j or i) ]
            [ -i (display file info) ]
            EncodedFile

-o MultiFastaFile
    If present, it writes the decoded data into file "MultiFastaFile".
    If not present, the output file name is obtained appending ".d"
    to "EncodedFile".

-v
	Verbose. Some additional information is displayed.

-V
	Show version information.

-t maxProcs
	Maximum number of parallel processes during decoding. Note: currently,
	parallel processing is not implemented in the Windows version.
	Therefore, for better performance, we recommend to use Linux.

-r recordRange
	This flag allows decoding only a given range of fasta records from
	a compressed multi-fasta file.

-i
	Reads the header of the "EncodedFile" and writes its content to the
	standard output. It gives information regarding the number of
	parts, the size of each part and the range of fasta records contained
	in each part. It also lists the diferent characters found in the
	fasta headers and in the sequences (i.e., the header and sequence
	alphabets). Finally, it shows the parameters used for encoding
	the data, such as the depth of the finite-context models.

EncodedFile
	The compressed file to decode.

=== Compression and decompression example using the default
    parameters (the "stat" command is used here just to display the
    size of the compressed file):

prompt> MFCompressC example.fa
prompt> stat -c %s example.fa.mfc
597991
prompt> MFCompressD example.fa.mfc
prompt> cmp example.fa example.fa.mfc.d
prompt>

=== Compression and decompression example showing the creation of
    a multi-part encoded file:

prompt> MFCompressC -p 2 example.fa
prompt> stat -c %s example.fa.mfc
610520
prompt> MFCompressD example.fa.mfc
prompt> cmp example.fa example.fa.mfc.d
prompt>

=== Example showing the use of the -i flag:

prompt> MFCompressD -i example.fa.mfc
File has 2 part(s) and 2947 record(s)
    Part 1 has 305073 bytes (records 1:1475)
    Part 2 has 305219 bytes (records 1476:2947)
Got 59 different header chars:
\n ",-./0123456789=ABCDEFGHILMNOPRSTU_abcdefghilmnopqrstuvwy
Got 5 different sequence chars:
ACGNT
Header context string: -c 3 1/50 2047
Sequence context string: -c 1:3 1/1 65535 0 0 -c 1:8 1/1 2047 0 0 -c 1:14 1/50 15 1 1 -bs 75
AuxInfo context string: -cs 5 16383 -cx 7 16383 -cc 12
prompt>

